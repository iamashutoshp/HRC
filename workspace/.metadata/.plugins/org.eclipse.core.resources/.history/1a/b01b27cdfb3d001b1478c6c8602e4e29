package com.highradius.internship.SearchNpage;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.gson.Gson;
import com.highradius.internship.DataClass;
import com.highradius.internship.logInUser;
import com.sun.xml.internal.bind.v2.schemagen.xmlschema.List;

import com.highradius.internship.data.*;


@WebServlet("/paging")



// implement client side paging
public class Pagination extends HttpServlet{
	private static final long serialVersionUID = 1L;
    
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Pagination() throws ClassNotFoundException {
    	super();
    }

	
    
//    try to implement paging
    
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		int pageNo = Integer.parseInt(request.getParameter("pNo"))-1;
		String level = request.getParameter("LvL");
		ArrayList<OrderDetails> data = null;
		Connection connection = null;
		String query="";
		try {
			connection = DataClass.initializeDatabase();
			
			switch (level) {
			case "Level 2":
				data=Level2Page(connection, level, pageNo);
			break;	
			case "Level 3":
				data=Level3Page(connection, level, pageNo);
			break;
			default:
				data=Level1Page(connection, level, pageNo);
				break;
			}
			
			DataClass.closeDBConnection(connection);
			System.out.println(query);
		 
			System.out.println("succeessssssssss");
			
			
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		int sz=0;
		if(data.size()%10 == 0)
			sz=data.size()/10;
		else
			sz=data.size()/10 + 1;
		
		
		
		
		
		
		ArrayList<OrderDetails> rowData = new ArrayList<>();
		
		
		for(int k=0;k<10 && (k+10*pageNo)<data.size();k++)
			rowData.add(data.get(k+10*pageNo));
		
		Data res = new Data(rowData, pageNo+1, sz);
		
		
		
		Gson gson = new Gson();
		String send = gson.toJson(res);
		 
		 
		 
		 PrintWriter out = response.getWriter();
		 
		 
		 response.setContentType("application/json");
		 response.setCharacterEncoding("UTF-8");
		 
		 
		 out.print(send);
		 out.flush();
	}
//
		
		
		private ArrayList<OrderDetails> Level1Page(Connection connection,String level,int pageNo) throws SQLException {
			
			String query = "SELECT * FROM order_details ;"  ;
			ArrayList<OrderDetails> data = new ArrayList<>();
			ResultSet resultset = DataClass.getDBResultSet(connection, query);
			int i = 0;
			while(resultset.next()) {
				OrderDetails details = new OrderDetails();
				details.setId(i++);
				String val="";
				val=resultset.getString("Approval_Status");
				details.setApproval_status(val==null?" ":val);
				
				val=resultset.getString("Approved_By");
				details.setApproved_By(val==null?" ":val);
				
				details.setCompany_Id(Integer.parseInt(resultset.getString("Customer_ID")));
				details.setCompany_Name(resultset.getString("Customer_Name"));
				
				val=resultset.getString("Notes");
				details.setNotes(val==null?" ":val);
				details.setOrder_amount(resultset.getString("Order_Amount"));
				
				details.setOrder_Date(resultset.getString("Order_Date"));
				details.setOrder_Id(Integer.parseInt(resultset.getString("Order_ID")));
				
				data.add(details);
				
			}
			DataClass.closeResultSet(resultset);
			
			return data;
			
		}
		
		private ArrayList<OrderDetails> Level2Page(Connection connection,String level,int pageNo) throws SQLException {
			return null;
		}
		
		private ArrayList<OrderDetails> Level3Page(Connection connection,String level,int pageNo) throws SQLException {
			return null;
		}
		
		
		


	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	doGet(request, response);
		
	}
	
	

}

class Data{
	ArrayList<OrderDetails> data;
	int pageNo, totalSize;
	Data(ArrayList<OrderDetails> d, int pno, int size){
		data=d;
		pageNo = pno;
		totalSize =size;
	}
}
